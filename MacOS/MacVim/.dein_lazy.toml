# ~/.dein_lazy.toml

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = ['python']
hook_source = '''
  :Skinbadwolf
  :Window
'''


### Programming
## Lisp
[[plugins]]
repo = 'kovisoft/slimv'
on_ft = ['scheme', 'lisp']
hook_source = '''
  nmap <D-Enter> ,d j
  imap <D-Enter> <ESC> ,d i
  nmap <LocalLeader>rf ,c
  nmap <LocalLeader>rq ,Q
  nmap <LocalLeader>cc ,b
  nmap <LocalLeader>a ,a
  nmap <LocalLeader>n ,n

  :Skinbadwolf
  :Window
'''

## R
[[plugins]]
repo = 'jalvesaq/Nvim-R'
on_ft = ['r', 'rmd']
hook_source = '''
  let g:R_assign = 0 
  nmap <D-Enter> <Plug>RDSendLine
  imap <D-Enter> <ESC> <Plug>RDSendLine i
  nmap <LocalLeader>cc <Plug>RSendChunk
  vmap <LocalLeader>ss <Plug>RDSendSelection <C-c>
  nmap <LocalLeader>pp <Plug>RDSendParagraph
  nmap <LocalLeader>cn <Plug>RNextRChunk
  nmap <LocalLeader>cN <Plug>RPreviousRChunk

  " Insert chunk
  nnoremap <Leader>tc :Templatechunk<CR>jo
  command! Templatechunk call s:Templatechunk()
  function! s:Templatechunk()
    call append(line("."), "```{r, warning=FALSE, message=FALSE}")
    call append(line(".")+1,"```")
  endfunction
  nnoremap <Leader>tC :TemplateChunk<CR>jjo
  command! TemplateChunk call s:TemplateChunk()
  function! s:TemplateChunk()
    call append(line("."), "")
    call append(line(".")+1, "```{r, warning=FALSE, message=FALSE}")
    call append(line(".")+2,"```")
  endfunction

  :Skinbadwolf
  :Window
'''

## Tex
[[plugins]] 
repo = 'thinca/vim-quickrun'
on_ft = ['tex']
hook_add = '''
  let g:quickrun_config = {
  \   'tex': {
  \       'command': 'latexmk',
  \       'exec': ['%c -gg -pdfdvi %s']
  \   },
  \}

 " Insert Default Template
  nnoremap <Leader>tn :TemplateNewDefault<CR>
  command! TemplateNewDefault call s:TemplateNewDefault()
  function! s:TemplateNewDefault()
    r ~/.vim/ftplugin/default.tex
  endfunction

 " Insert Eng Template
  nnoremap <Leader>tN :TemplateNewEng<CR>
  command! TemplateNewEng call s:TemplateNewEng()
  function! s:TemplateNewEng()
    r ~/.vim/ftplugin/EngTex.tex
  endfunction
'''
hook_source = '''
  " TexShopでtexファイルを表示
  nnoremap <Leader>ts :TeXShopRun<CR>
  command! TeXShopRun call s:TeXShopRun()
  function! s:TeXShopRun()
    let e = expand("%:e")
    if e == "tex"
      :!open -a /Applications/TeX/TeXShop.app %:r.tex
      echo "Open in TeXShop"
    else
      echo "File is not tex"
    endif
  endfunction

 " Insert align
  nnoremap <Leader>ta :TemplateAlign<CR>jo
  command! TemplateAlign call s:TemplateAlign()
  function! s:TemplateAlign()
    call append(line("."), "\\begin{align}")
    call append(line(".")+1,"\\end{align}")
  endfunction

 " Insert itemize
  nnoremap <Leader>ti :TemplateItemize<CR>jo
  command! TemplateItemize call s:TemplateItemize()
  function! s:TemplateItemize()
    call append(line("."), "\\begin{itemize}")
    call append(line(".")+1,"\\end{itemize}")
  endfunction

 " Insert figure
  nnoremap <Leader>tf :TemplateFigure<CR>jjj
  command! TemplateFigure call s:TemplateFigure()
  function! s:TemplateFigure()
    call append(line("."), "\\begin{figure}[!htb]")
    call append(line(".")+1, "\\centering")
    call append(line(".")+2, "\\includegraphics[width=1.0 \linewidth]{}")
    call append(line(".")+3,"\\caption{}")
    call append(line(".")+4,"\\label{}")
    call append(line(".")+5,"\\end{figure}")
  endfunction

  " Typeset
  let g:latex_mode = 0
  nnoremap <Leader>tc :LatexMode<CR>
  command! LatexMode call s:LatexMode()
  function! s:LatexMode()
    if g:latex_mode==0
      let g:latex_mode = 1
      let g:quickrun_config['tex'] = {
      \ 'command' : 'latexmk',
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'null',
      \ 'outputter/error/error' : 'quickfix',
      \ 'srcfile' : expand("%"),
      \ 'cmdopt': '-pdfdvi',
      \ 'hook/sweep/files' : [
      \                      '%S:p:r.aux',
      \                      '%S:p:r.bbl',
      \                      '%S:p:r.blg',
      \                      '%S:p:r.dvi',
      \                      '%S:p:r.fdb_latexmk',
      \                      '%S:p:r.fls',
      \                      '%S:p:r.log',
      \                       '%S:p:r.synctex.gz',
      \                       '%S:p:r.toc',
      \                      '%S:p:r.bcf',
      \                      '%S:p:r.nav',
      \                      '%S:p:r.run.xml',
      \                      '%S:p:r.snm',
      \                      '%S:p:r.vrb',
      \                      '%S:p:r.out'
      \                      ],
      \ 'exec': '%c %o %a %s',
      \}
      :echomsg "Typeset: latexmk (\\tc to change)"
    else
      if g:latex_mode==1
        let g:latex_mode = 2
        let g:quickrun_config['tex'] = {
        \ 'command' : 'latexmk',
        \ 'outputter' : 'error',
        \ 'outputter/error/success' : 'null',
        \ 'outputter/error/error' : 'quickfix',
        \ 'srcfile' : expand("%"),
        \ 'cmdopt': '-pdf',
        \ 'hook/sweep/files' : [
        \                      '%S:p:r.aux',
        \                      '%S:p:r.bbl',
        \                      '%S:p:r.blg',
        \                      '%S:p:r.dvi',
        \                      '%S:p:r.fdb_latexmk',
        \                      '%S:p:r.fls',
        \                      '%S:p:r.log',
        \                       '%S:p:r.synctex.gz',
        \                       '%S:p:r.toc',
        \                      '%S:p:r.bcf',
        \                      '%S:p:r.nav',
        \                      '%S:p:r.run.xml',
        \                      '%S:p:r.snm',
        \                      '%S:p:r.vrb',
        \                      '%S:p:r.out'
        \                      ],
        \}
        :echomsg "Typeset: pdflatex (\\tc to change)"
      else
        " if g:latex_mode==2
        let g:latex_mode = 0
        let g:quickrun_config['tex'] = {
        \ 'command' : 'latexmk',
        \ 'outputter' : 'error',
        \ 'outputter/error/success' : 'null',
        \ 'outputter/error/error' : 'quickfix',
        \ 'srcfile' : expand("%"),
        \ 'cmdopt': '-xelatex',
        \ 'hook/sweep/files' : [
        \                      '%S:p:r.aux',
        \                      '%S:p:r.bbl',
        \                      '%S:p:r.blg',
        \                      '%S:p:r.dvi',
        \                      '%S:p:r.fdb_latexmk',
        \                      '%S:p:r.fls',
        \                      '%S:p:r.log',
        \                       '%S:p:r.synctex.gz',
        \                       '%S:p:r.toc',
        \                      '%S:p:r.bcf',
        \                      '%S:p:r.nav',
        \                      '%S:p:r.run.xml',
        \                      '%S:p:r.snm',
        \                      '%S:p:r.vrb',
        \                      '%S:p:r.out'
        \                      ],
        \}
        :echomsg "Typeset: xelatex (\\tc to change)"
      endif
    endif
  endfunction
  :LatexMode
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
let g:vimtex_fold_envs = 0
let g:tex_indent_brace=0
'''
